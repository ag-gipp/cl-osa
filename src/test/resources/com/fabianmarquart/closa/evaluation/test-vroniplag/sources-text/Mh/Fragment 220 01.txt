and their preferences are assumed to exhibit constant absolute risk aversion which can be parameterized as in, $ U(w) = e^{~\gamma w} $. (3) This is clearly a very simplified market. No attempt is made to look at the feedback from agents’ demands to returns on the risky asset. There is no consumption, and wealth is not linked to agents’ impact on asset prices, or evolution. However, it is a very straightforward test of learning in a financial market. Given the normally distributed dividend process, there is a well-known optimal solution to the portfolio problem given by, $ s^* = \alpha^*(\bar{d} - p) $ (4) $ a^*=\frac{1}{\gamma\sigma^2_d} $ (5) where $ \sigma_d^2 $ is the variance of the random dividend payout. The main exercise in Lettau’s paper is to see if and when agents are able to learn this optimal portfolio strategy using a genetic algorithm. In general, agents’ policy functions could take the form of $ s=s(\bar{d},p) $, (6) [p. 14] but Lettau simplifies this by using the optimal linear functional form for agent i, $ s_i = \alpha_i(\bar{d} - p) $. (7) This gives the agents a head start on the portfolio problem, but they still need to learn the optimal $ \alpha $.[FN 28] The market is run for $ S $ periods with new independent draws of the dividend for each period. Each agent continues to use the portfolio determined by $ \alpha_i $ , which remains fixed. At the end of each block of $ S $ the genetic algorithm (GA) is run, and the set of agent parameters is redrawn. Agents are parameterized with a bitstring encoding given by $ \alpha_i = MIN + (MAX - MIN)\frac{\sum_{j=1}^L \mu_{j,i}2^{j-1}}{2^L-1} $ where $ \mu_{j,i} $ is the bitstring for the strategy of agent $ i $. [FN 28] A more complicated functional form is tried, but the only change is that convergence is slowed down by the need to learn more parameters.